{"version":3,"sources":["utils/TimerUtils.js","components/Button/index.jsx","components/Timer/index.jsx","components/TimerForm/index.jsx","components/EditableTimerForm/index.jsx","components/ToggleableTimerForm/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["millisecondsToHuman","ms","seconds","Math","floor","minutes","hours","pad","toString","join","numberString","size","padded","length","Button","children","onClick","className","rest","Timer","id","title","project","time","isRunning","onEdit","onRemove","onRunningChangeStatus","useState","runningStatus","setRunningStatus","TimerForm","onCancel","onCreate","onUpdate","data","setData","updateLabel","onChange","e","name","target","value","htmlFor","dataSubmit","Date","now","EditableTimerForm","isEdit","setIsEdit","handleCloseForm","ToggleableTimerForm","isOpen","setIsOpen","App","timeoutRef","useRef","timers","setTimers","handleUpdateTimer","newTimers","map","timer","index","handleRemoveTime","filter","handleTimerRunning","useEffect","clearTimeout","current","setTimeout","newDataTimer","attrs","uuidv4","newTimer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3ccc4a2.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const millisecondsToHuman = (ms) => {\r\n  const seconds = Math.floor((ms / 1000) % 60);\r\n  const minutes = Math.floor((ms / 1000 / 60) % 60);\r\n  const hours = Math.floor(ms / 1000 / 60 / 60);\r\n\r\n  const humanized = [\r\n    pad(hours.toString(), 2),\r\n    pad(minutes.toString(), 2),\r\n    pad(seconds.toString(), 2),\r\n  ].join(\":\");\r\n\r\n  return humanized;\r\n};\r\n\r\nconst pad = (numberString, size) => {\r\n  let padded = numberString;\r\n  while (padded.length < size) {\r\n    padded = `0${padded}`;\r\n  }\r\n  return padded;\r\n};\r\n\r\nexport const newTimer = (attrs = {}) => {\r\n  const timer = {\r\n    title: attrs.title || \"Timer\",\r\n    project: attrs.project || \"Project\",\r\n    id: uuidv4(),\r\n    time: 0,\r\n    isRunning: true,\r\n  };\r\n\r\n  return timer;\r\n};\r\n","import React from \"react\";\r\n\r\nconst Button = ({ children, onClick, className, ...rest }) => {\r\n  return (\r\n    <button\r\n      children={children}\r\n      onClick={onClick}\r\n      className={\"button\" + className}\r\n      {...rest}\r\n    ></button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport { millisecondsToHuman } from \"../../utils/TimerUtils\";\r\nimport Button from \"../Button\";\r\n\r\nconst Timer = ({\r\n  id,\r\n  title,\r\n  project,\r\n  time,\r\n  isRunning,\r\n  onEdit,\r\n  onRemove,\r\n  onRunningChangeStatus,\r\n}) => {\r\n  const [runningStatus, setRunningStatus] = useState(isRunning);\r\n\r\n  const handleEdit = () => {\r\n    onEdit();\r\n  };\r\n\r\n  const handleRunningChangeStatus = () => {\r\n    onRunningChangeStatus(id);\r\n    setRunningStatus(!runningStatus);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App-component\">\r\n      <p>{title}</p>\r\n      <p>{project}</p>\r\n      <p>{millisecondsToHuman(time)}</p>\r\n\r\n      <div>\r\n        <Button onClick={handleEdit}>Edit</Button>\r\n        <Button onClick={() => onRemove(id)}>Remove</Button>\r\n      </div>\r\n      <Button onClick={handleRunningChangeStatus}>\r\n        {runningStatus ? \"START\" : \"STOP\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../Button\";\r\n\r\nconst TimerForm = ({ onCancel, onCreate, onUpdate, id, title, project }) => {\r\n  const [data, setData] = useState({\r\n    title: title || \"\",\r\n    project: project || \"\",\r\n  });\r\n\r\n  const updateLabel = id ? \"Update\" : \"Create\";\r\n\r\n  const onChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    const dataSubmit = {\r\n      id: id,\r\n      title: data.title,\r\n      project: data.project,\r\n    };\r\n    onUpdate(dataSubmit);\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    const dataSubmit = {\r\n      id: Date.now(),\r\n      title: data.title,\r\n      project: data.project,\r\n    };\r\n    onCreate(dataSubmit);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input\r\n          id=\"title\"\r\n          name=\"title\"\r\n          value={data.title}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"project\">Project</label>\r\n        <input\r\n          id=\"project\"\r\n          name=\"project\"\r\n          value={data.project}\r\n          onChange={(e) => onChange(e)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Button onClick={onCancel}>Cancel</Button>\r\n        <Button onClick={id ? handleEdit : handleCreate}>{updateLabel}</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimerForm;\r\n","import React, { useState } from \"react\";\r\nimport Timer from \"../Timer\";\r\nimport TimerForm from \"../TimerForm\";\r\n\r\nconst EditableTimerForm = ({\r\n  id,\r\n  title,\r\n  project,\r\n  time,\r\n  isRunning,\r\n  onUpdate,\r\n  onRemove,\r\n  onRunningChangeStatus,\r\n}) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const handleOpenForm = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const handleCloseForm = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleUpdate = (data) => {\r\n    onUpdate(data);\r\n    handleCloseForm();\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    onRemove(id);\r\n  };\r\n\r\n  const handleRunningChangeStatus = (id) => {\r\n    onRunningChangeStatus(id);\r\n  };\r\n\r\n  if (isEdit)\r\n    return (\r\n      <TimerForm\r\n        onCancel={handleCloseForm}\r\n        id={id}\r\n        title={title}\r\n        project={project}\r\n        onUpdate={handleUpdate}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <Timer\r\n      id={id}\r\n      title={title}\r\n      project={project}\r\n      time={time}\r\n      isRunning={isRunning}\r\n      onEdit={handleOpenForm}\r\n      onRemove={handleRemove}\r\n      onRunningChangeStatus={handleRunningChangeStatus}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditableTimerForm;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../Button\";\r\nimport TimerForm from \"../TimerForm\";\r\n\r\nconst ToggleableTimerForm = ({ onCreate }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleOpenForm = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleCloseForm = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleCreateTimer = (data) => {\r\n    onCreate(data);\r\n    handleCloseForm();\r\n  };\r\n\r\n  if (!isOpen) return <Button onClick={handleOpenForm}>+</Button>;\r\n  return <TimerForm onCancel={handleCloseForm} onCreate={handleCreateTimer} />;\r\n};\r\n\r\nexport default ToggleableTimerForm;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport EditableTimerForm from \"./components/EditableTimerForm\";\r\nimport ToggleableTimerForm from \"./components/ToggleableTimerForm\";\r\nimport { newTimer } from \"./utils/TimerUtils\";\r\n\r\nfunction App() {\r\n  const timeoutRef = useRef();\r\n\r\n  const [timers, setTimers] = useState([]);\r\n\r\n  const handleUpdateTimer = (data) => {\r\n    const newTimers = timers.map((timer, index) => {\r\n      if (timer.id === data.id) {\r\n        return { ...timer, title: data.title, project: data.project };\r\n      }\r\n      return timer;\r\n    });\r\n\r\n    setTimers(newTimers);\r\n  };\r\n\r\n  const handleCreateTime = (data) => {\r\n    const newDataTimer = newTimer(data);\r\n    setTimers([newDataTimer, ...timers]);\r\n  };\r\n\r\n  const handleRemoveTime = (id) => {\r\n    const newTimers = timers.filter((timer) => timer.id !== id);\r\n\r\n    setTimers(newTimers);\r\n  };\r\n\r\n  const handleTimerRunning = (id) => {\r\n    const newTimers = timers.map((timer) => {\r\n      if (timer.id === id) {\r\n        return { ...timer, isRunning: !timer.isRunning };\r\n      }\r\n      return timer;\r\n    });\r\n\r\n    setTimers(newTimers);\r\n  };\r\n\r\n  useEffect(() => {\r\n    clearTimeout(timeoutRef.current);\r\n    timeoutRef.current = setTimeout(() => {\r\n      const newTimers = timers.map((timer, index) => {\r\n        if (timer.isRunning) return { ...timer, time: timer.time + 1000 };\r\n\r\n        return timer;\r\n      });\r\n\r\n      setTimers(newTimers);\r\n    }, 1000);\r\n  }, [timers]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Timers</h1>\r\n      <ToggleableTimerForm onCreate={handleCreateTime} />\r\n\r\n      {timers.map((timer, index) => (\r\n        <EditableTimerForm\r\n          key={timer.id}\r\n          id={timer.id}\r\n          title={timer.title}\r\n          project={timer.project}\r\n          time={timer.time}\r\n          isEdit={timer.isEdit}\r\n          onUpdate={handleUpdateTimer}\r\n          onRemove={handleRemoveTime}\r\n          onRunningChangeStatus={handleTimerRunning}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}